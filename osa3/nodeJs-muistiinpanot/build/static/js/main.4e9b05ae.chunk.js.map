{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","message","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","value","onChange","console","log","target","type","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4e9b05ae.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important\r\n      ? 'make not important' : 'make important'\r\n  \r\n    return (\r\n      <li className='note'>\r\n        {note.content} \r\n        <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n    )\r\n  }\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\n\r\nconst App = () => {\r\n\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState('')\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState()\r\n\r\n    const Notification = ({ message }) => {\r\n        if (message === null) {\r\n          return null\r\n        }\r\n      \r\n        return (\r\n          <div className=\"error\">\r\n            {message}\r\n          </div>\r\n        )\r\n      }\r\n\r\n    useEffect(() => {\r\n        noteService\r\n            .getAll()\r\n            .then(initialNotes => {\r\n                setNotes(initialNotes)\r\n            })\r\n    }, [])\r\n\r\n    const addNote = (event) => {\r\n        event.preventDefault()\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() > 0.5\r\n        }\r\n\r\n        noteService\r\n            .create(noteObject)\r\n            .then(returnedNote => {\r\n                setNotes(notes.concat(returnedNote))\r\n                setNewNote('')\r\n            })\r\n    }\r\n\r\n    const notesToShow = showAll\r\n        ? notes\r\n        : notes.filter(note => note.important)\r\n\r\n    const toggleImportanceOf = id => {\r\n        const note = notes.find(n => n.id === id)\r\n        const changedNote = { ...note, important: !note.important }\r\n\r\n        noteService\r\n            .update(id, changedNote)\r\n            .then(returnedNote => {\r\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(\r\n                    `Note '${note.content}' was already removed from server`\r\n                  )\r\n                  setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                  }, 5000)\r\n                setNotes(notes.filter(n => n.id !== id))\r\n              })\r\n    }\r\n\r\n    const rows = () => notesToShow.map(note =>\r\n        <Note\r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n        />\r\n    )\r\n\r\n    const handleNoteChange = (event) => {\r\n        console.log(event.target.value)\r\n        setNewNote(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notes</h1>\r\n\r\n            <Notification message={errorMessage} />\r\n\r\n            <div>\r\n                <button onClick={() => setShowAll(!showAll)}>\r\n                    show {showAll ? 'important' : 'all'}\r\n                </button>\r\n            </div>\r\n            <ul>\r\n                {rows()}\r\n            </ul>\r\n            <form onSubmit={addNote}>\r\n                <input\r\n                    value={newNote}\r\n                    onChange={handleNoteChange}\r\n                />\r\n                <button type=\"submit\">save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}